container NZlijn_Analysis
{
	container ModelParameters
	{
		parameter<string>  ta_ca_areas                  := 'Set_TA'+string(treatment_size)+'_CA_'+string(control_size)+'_'+string(Threshold_ToenameAantalBanen)+'banen_in'+string(AccessibilityThreshold)+'min';
		parameter<float32> treatment_size               := 12f;
		parameter<float32> control_size                 := 24f;
		
		parameter<int32>   Threshold_ToenameAantalBanen := 50000i; //banen   50000i
		parameter<int32>   AccessibilityThreshold       := 30i;    //aantal banen bereikbaar binnen X minuten
	}
	
	
	#include <eenheden.dms>
	#include <typeringen.dms>
	#include <geography.dms>
	#include <brondata.dms>
	#include <analyse.dms>
	#include <rekenschemas.dms>
	
	container ExportSettings
	{
		container GitImpl
		{
			parameter<string> PD               := expand(., '%projDir%');
			parameter<string> DOS_PD           := replace(PD, '/', '\\');

			parameter<string> SwitchDriveCmd   := substr(DOS_PD, 0, 2);
			parameter<string> CdCmd            := 'cd '+DOS_PD;
			parameter<string> DescrCmd         := 'git describe --all > git.txt';
			parameter<string> StatusCmd        := 'git status >> git.txt';
			parameter<string> HashCmd          := 'git rev-parse HEAD >> git.txt';
			parameter<string> RevisionInfoCmds := SwitchDriveCmd + ' && ' + CdCmd + ' && ' + DescrCmd + ' && ' + StatusCmd + ' && ' + HashCmd;
			parameter<uint32> WriterCode       := exec_ec(Expand(., '%env:ComSpec%'), '/c ' + RevisionInfoCmds, PD);
		}	
		
		container MetaInfo
		{
			parameter<string> FileName : ='%storageBaseName%.xml';
			parameter<string> FileType : ='xml'; // default is 'ini' but ini files cannot be used well to store multi-line properties such as error messages of inproperly configured properties
			
			container Contents
			{
				container Software
				{
					parameter<string> GeoDMSVersion := string(GeoDmsMajorVersionNumber()) + '.' +  string(GeoDmsMinorVersionNumber())  +'.'  +  string(GeoDmsPatchNumber());
				}
				
				container Config
				{
					parameter<string> FullName := '=PropValue(this, '+Quote('FullName')+')';
					parameter<string> Expr     := '=PropValue(this, '+Quote('Expr'    )+')';
					parameter<string> RunFile  := expand(.,'%configDir%')+'.dms';
				}
				
				container Environment
				{
					parameter<string> Processor    := expand(., '%env:PROCESSOR_IDENTIFIER%');
					parameter<string> User         := expand(., '%env:USERNAME%');
					parameter<string> ComputerName := expand(., '%env:COMPUTERNAME%');
				}
				
				container Git
				{
					parameter<string> RevisionInfo : Storagename = "=(GitImpl/WriterCode==0)?'%projDir%/git.txt':'Error '+String(GitImpl/WriterCode)+' while producing %projDir%/git.txt'", StorageType = "str";
				}

				container Parameters
				{
					parameter<string>   treatment_size               := string(ModelParameters/treatment_size);
					parameter<string>   control_size                 := string(ModelParameters/control_size);
					parameter<string>   Threshold_ToenameAantalBanen := string(ModelParameters/Threshold_ToenameAantalBanen);
					parameter<string>   AccessibilityThreshold       := string(ModelParameters/AccessibilityThreshold);
				}
			}
		}
	}	
	
}
