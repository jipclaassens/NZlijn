container typeringen: using = "eenheden"
{
	unit<uint8> vbo_status : nrofrows = 8
	{
		attribute<string>    label     : ['Niet gerealiseerd verblijfsobject','Verblijfsobject buiten gebruik','Verblijfsobject gevormd','Verblijfsobject in gebruik','Verblijfsobject in gebruik (niet ingemeten)','Verblijfsobject ingetrokken','Verblijfsobject ten onrechte opgevoerd', 'Verbouwing verblijfsobject'], DialogType = "LabelText";
		attribute<string>    name      := replace(label, ' ', '_', '-', '_', '(', '', ')', '');
		attribute<bool>      IsVoorraad : [FALSE, TRUE, FALSE, TRUE, TRUE, FALSE, FALSE, TRUE];
		attribute<bool>      IsIngetrokken : [FALSE, FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, FALSE];
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
	
	#include <wegtype.dms>
	
	unit<uint8> seconden : nrofrows = 3
	{
		attribute<string>   Label        :  ['treated', 'control', 'other'], DialogType = "LabelText";
		attribute<uint32>   PenColor     := Brushcolor, DialogType = "PenColor";
		attribute<uint32>   BrushColor   :  [rgb(200,0,0),rgb(0,200,0), rgb(128,128,128)] , DialogType = "BrushColor";
		attribute<s>        ClassBreaks  :  [0,1080,3600], DialogType = "Classification";
	}
	
	unit<uint32> all_metro_stations := /Brondata/Metrostations/All_stations/uq
	{
		attribute<string> name       := replace(Brondata/Metrostations/All_stations/uq/name, 'Centraal', 'StationCentraal', 'De_Pijp', 'DePijp', 'Zuid', 'StationZuid');
		attribute<string> name_org   := Brondata/Metrostations/All_stations/uq/name;
		attribute<string> var_name   := 'station_'+name+'_reistijd';
		attribute<bool>   IsLijn50   := IsDefined(rlookup(name, /Brondata/Metrostations/Lijn50/name));
		attribute<bool>   IsLijn51   := IsDefined(rlookup(name, /Brondata/Metrostations/Lijn51/name));
		attribute<bool>   IsLijn52   := IsDefined(rlookup(name_org, /Brondata/Metrostations/Lijn52/name));
		attribute<bool>   IsLijn53   := IsDefined(rlookup(name, /Brondata/Metrostations/Lijn53/name));
		attribute<bool>   IsLijn54   := IsDefined(rlookup(name, /Brondata/Metrostations/Lijn54/name));
		
		unit<uint32> NZ_stations := subset(IsLijn52)
		{
			attribute<string> name       := ../name[nr_OrgEntity];
			attribute<string> var_name   := ../var_name[nr_OrgEntity];
			attribute<string> Label      := name, DialogType = "LabelText";
		}
		unit<uint32> lijn50_stations := subset(IsLijn50)
		{
			attribute<string> name       := ../name[nr_OrgEntity];
			attribute<string> var_name   := ../var_name[nr_OrgEntity];
		}
	}
	
	unit<uint32> Kwartalen : nrofrows = 29
	{
		attribute<uint32> values       :     [201201 
												// ,201204, 201207, 201210
											, 201301 
												// ,201304, 201307, 201310
											, 201401, 201404, 201407, 201410
											, 201501, 201504, 201507, 201510
											, 201601, 201604, 201607, 201610
											, 201701, 201704, 201707, 201710
											, 201801, 201804, 201807, 201810
											, 201901, 201904, 201907, 201910
											, 202001
											, 202101
											, 202201
											];
		attribute<uint32> values_prev  := MakeDefined(rjoin(id(.) -1, id(.), values),201201);
		attribute<string> name         := 'Y' + string(values);
		attribute<string> name_prev    := 'Y' + string(values_prev);
		attribute<string> name_triv    := right(name, 2) == '01' 
											? left(name, 5) + '_Q4' 
											: right(name, 2) == '04' 
												? left(name, 5) + '_Q1' 
												: right(name, 2) == '07' 
													? left(name, 5) + '_Q2' 
													: right(name, 2) == '10' 
														? left(name, 5) + '_Q3' 
														: name;
		attribute<string> name_triv_prev   := rjoin(values_prev, values, name_triv);
		attribute<string> name_triv_2prev  := rjoin(values_prev, values, name_triv_prev);
		attribute<string> name_triv_3prev  := rjoin(values_prev, values, name_triv_2prev);
		attribute<string> name_triv_4prev  := rjoin(values_prev, values, name_triv_3prev);
	}
	
	unit<uint8> vbo_gebruiksdoel: nrofrows = 11
	{
		attribute<uint8> ID := ID(.);
		attribute<string> label:
		[
			'bijeenkomstfunctie','celfunctie','gezondheidszorgfunctie','industriefunctie','kantoorfunctie','logiesfunctie'
			,'onderwijsfunctie','overige gebruiksfunctie','sportfunctie','winkelfunctie','woonfunctie'
		];
		attribute<string> name := replace(replace(label,' ','_'), 'functie','');
		attribute<uint32> BrushColor:  DialogType = "BrushColor",[rgb(255,255,255), rgb(  0,129,  0),rgb(  0,  0,255),rgb(255,220,  0),rgb(255,  0,  0)];
		
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
	unit<uint32> jaren1222  := range(uint32, 2012, 2023)
	{
		attribute<uint32> values       := id(.);
		attribute<uint32> values_prev  := values == 2012 ? 2012 : values - 1;
		attribute<string> name         := replace(string(values), '201', 'Y201', '202', 'Y202');
		
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
	unit<uint8> metro_stations: NrOfRows = 8 //17
	{
		parameter<uint8> nrAttr := 2b;
		unit<uint8> elem := range(uint8, 0b, nrAttr *#metro_stations[uint8])
		{
			attribute<string> values: [ 
			// 'station_name','bestaand',
			 'Noord',               'False'
			,'Noorderpark',         'False'
			,'Station Centraal',            'True'
			,'Rokin',               'False'  
			,'Vijzelgracht',        'False' 
			,'De Pijp',             'False'  
			,'Europaplein',         'False'
			,'Station Zuid',                'True' 
			// ,'Station Isolatorweg',         'False'
			// ,'Station Sloterdijk',          'True'
			// ,'Station De Vlughtlaan',       'False'
			// ,'Station Jan van Galenstraat', 'False'
			// ,'Station Postjesweg',          'False'
			// ,'Station Lelylaan',            'True'
			// ,'Station Heemstedestraat',     'False'
			// ,'Station Henk Sneevlietweg',   'False'
			// ,'Station Amstelveenseweg',     'False'
			];
		}
		attribute<.> id                   := id(.);
		attribute<string> label           := elem/values[value(id * nrAttr + 0b, elem)], DialogType = "LabelText";
		attribute<bool>   bestaand        := value(elem/values[value(id * nrAttr + 1b, elem)], bool);
		attribute<bool>   IsLijn50        := const(FALSE, .);
		attribute<bool>   IsLijn51        := const(FALSE, .);
		attribute<bool>   IsLijn52        := const(TRUE, .);
		attribute<bool>   IsLijn53        := const(FALSE, .);
		attribute<bool>   IsLijn54        := const(FALSE, .);

		attribute<string> name            := replace(label, ' ', '');
		attribute<string> name_compact    := replace(name, 'Station', '');
		
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}	




}