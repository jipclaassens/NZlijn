container DiD_Prijzen := 
	for_each_nedv(
		typeringen/all_metro_stations/NZ_stations/var_name
		, 'Analyse/NetwerkDist_Points_to_NZ/NetwerkDist_perstation/'+string(typeringen/all_metro_stations/NZ_stations/name)+'/Netwerk/OrgToDest/MakeOD_Time/potential[NL_grid_domain_rel]'
		, Brondata/NVM/Points
		, s
	), using = "eenheden;Modelparameters"
{
	unit<uint32>              NVM_AMS                                        := Brondata/NVM/Points;

	attribute<geography/rdc>  geometry                             (NVM_AMS) := NVM_AMS/geometry, DisableStorage = "true";
	// attribute<geography/wgs84_base>  geometry_LL                   (NVM_AMS) := NVM_AMS/geometry_LL, DisableStorage = "true";
	// attribute<float32>        x                                    (NVM_AMS) := pointcol(geometry);
	// attribute<float32>        y                                    (NVM_AMS) := pointrow(geometry);
	// attribute<float32>        Long                                 (NVM_AMS) := pointcol(geometry_LL);
	// attribute<float32>        Lat                                  (NVM_AMS) := pointrow(geometry_LL);
	attribute<uint32>         obsid                                (NVM_AMS) := NVM_AMS/obsid;
	attribute<string>         postcode                             (NVM_AMS) := NVM_AMS/postcode;
	
	attribute<uint2>          d_apartment                          (NVM_AMS) := NVM_AMS/d_apartment;
	attribute<uint2>          d_terraced                           (NVM_AMS) := NVM_AMS/d_terraced;
	attribute<uint2>          d_semidetached                       (NVM_AMS) := NVM_AMS/d_semidetached;
	attribute<uint2>          d_detached                           (NVM_AMS) := NVM_AMS/d_detached;
	attribute<eur>            price                                (NVM_AMS) := NVM_AMS/price;
	attribute<m2>             size                                 (NVM_AMS) := NVM_AMS/size;
	// attribute<m2>             lotsize                              (NVM_AMS) := NVM_AMS/lotsize;
	attribute<jaar>           trans_year                           (NVM_AMS) := NVM_AMS/trans_year;
	attribute<jaar>           trans_month                          (NVM_AMS) := NVM_AMS/trans_month;
	attribute<jaar>           bouwjaar                             (NVM_AMS) := NVM_AMS/bouwjaar;
	attribute<jaar>           bouwjaar_baggeom                     (NVM_AMS) := NVM_AMS/bouwjaar_baggeom;
	// attribute<jaar>           bouwjaar_augm                        (NVM_AMS) := NVM_AMS/bouwjaar_augm;
	attribute<uint32>         nrooms                               (NVM_AMS) := NVM_AMS/nrooms;
	// attribute<uint32>         nbathrooms                           (NVM_AMS) := NVM_AMS/nbathrooms;
	attribute<uint2>          d_maintgood                          (NVM_AMS) := NVM_AMS/d_maintgood;
	// attribute<uint2>          d_centralheating                     (NVM_AMS) := NVM_AMS/d_centralheating;
	// attribute<uint2>          d_privpark                           (NVM_AMS) := NVM_AMS/d_privpark;
	// attribute<uint2>          d_kk                                 (NVM_AMS) := NVM_AMS/d_kk;
	// attribute<uint2>          d_erfpacht                           (NVM_AMS) := NVM_AMS/d_erfpacht;
	// attribute<uint2>          d_isol_compl                         (NVM_AMS) := NVM_AMS/d_isol_compl;
	// attribute<uint2>          d_garden                             (NVM_AMS) := NVM_AMS/d_garden;
	// attribute<uint2>          d_listed                             (NVM_AMS) := NVM_AMS/d_listed;
	
	attribute<uint32>         CrimeIndex                           (NVM_AMS) := /Brondata/Regios/Buurt/CI_2021[buurt_rel];
	attribute<uint32>         SchoolQuality                        (NVM_AMS) := switch(
																				 case(trans_year <= 2010[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2010/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2011[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2011/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2012[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2012/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2013[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2013/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2014[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2014/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2015[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2015/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2016[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2016/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2017[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2017/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2018[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2018/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2019[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2018/Result/Uitgesmeerd)[NL_grid_domain_rel]) //er zijn geen scores voor 2019
																				 ,case(trans_year == 2020[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2020/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2021[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2021/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2022[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2022/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,case(trans_year == 2023[jaar], uint32(/Brondata/Schoolkwaliteit/Toetsscores/PerPeiljaar/Y2023/Result/Uitgesmeerd)[NL_grid_domain_rel])
																				 ,null_u);
	attribute<uint32>         CountWoning                          (NVM_AMS) := switch(
																				 case(trans_year <= 2012[jaar], uint32(/Brondata/BAG/Snapshots/VBOs/Y201201/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,case(trans_year == 2013[jaar], uint32(Brondata/BAG/Snapshots/VBOs/Y201301/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,case(trans_year == 2014[jaar], uint32(Brondata/BAG/Snapshots/VBOs/Y201401/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,case(trans_year == 2015[jaar], uint32(Brondata/BAG/Snapshots/VBOs/Y201501/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,case(trans_year == 2016[jaar], uint32(Brondata/BAG/Snapshots/VBOs/Y201601/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,case(trans_year == 2017[jaar], uint32(Brondata/BAG/Snapshots/VBOs/Y201701/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,case(trans_year == 2018[jaar], uint32(Brondata/BAG/Snapshots/VBOs/Y201801/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,case(trans_year == 2019[jaar], uint32(Brondata/BAG/Snapshots/VBOs/Y201901/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,case(trans_year == 2020[jaar], uint32(Brondata/BAG/Snapshots/VBOs/Y202001/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,case(trans_year == 2021[jaar], uint32(Brondata/BAG/Snapshots/VBOs/Y202101/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,case(trans_year == 2022[jaar], uint32(Brondata/BAG/Snapshots/VBOs/Y202201/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,case(trans_year == 2023[jaar], uint32(Brondata/BAG/Snapshots/VBOs/Y202301/vbo/count_doelen/woon)[NL_grid_domain_rel])
																				 ,null_u);
	attribute<uint32>         CountPop_NonWestern                  (NVM_AMS) := switch(
																				 case(trans_year <= 2015[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2015/domain/pop_nietwest)[NL_grid_domain_rel])
																				 ,case(trans_year == 2016[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2016/domain/pop_nietwest)[NL_grid_domain_rel])
																				 ,case(trans_year == 2017[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2017/domain/pop_nietwest)[NL_grid_domain_rel])
																				 ,case(trans_year == 2018[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2018/domain/pop_nietwest)[NL_grid_domain_rel])
																				 ,case(trans_year == 2019[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2019/domain/pop_nietwest)[NL_grid_domain_rel])
																				 ,case(trans_year == 2020[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2020/domain/pop_nietwest)[NL_grid_domain_rel])
																				 ,case(trans_year == 2021[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2021/domain/pop_nietwest)[NL_grid_domain_rel])
																				 ,case(trans_year == 2022[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2021/domain/pop_nietwest)[NL_grid_domain_rel]) //zit er niet in dat jaar.
																				 ,case(trans_year == 2023[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2021/domain/pop_nietwest)[NL_grid_domain_rel]) //zit er niet in dat jaar.
																				 ,null_u);
	attribute<uint32>         CountPop_WorkingAge                  (NVM_AMS) := switch(
																				 case(trans_year <= 2015[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2015/domain/pop_working)[NL_grid_domain_rel])
																				 ,case(trans_year == 2016[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2016/domain/pop_working)[NL_grid_domain_rel])
																				 ,case(trans_year == 2017[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2017/domain/pop_working)[NL_grid_domain_rel])
																				 ,case(trans_year == 2018[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2018/domain/pop_working)[NL_grid_domain_rel])
																				 ,case(trans_year == 2019[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2019/domain/pop_working)[NL_grid_domain_rel])
																				 ,case(trans_year == 2020[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2020/domain/pop_working)[NL_grid_domain_rel])
																				 ,case(trans_year == 2021[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2021/domain/pop_working)[NL_grid_domain_rel])
																				 ,case(trans_year == 2022[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2022/domain/pop_working)[NL_grid_domain_rel])
																				 ,case(trans_year == 2023[jaar], uint32(Brondata/CBS_vierkanten/Vierkanten/PerJaar/Y2023/domain/pop_working)[NL_grid_domain_rel])
																				 ,null_u);

	
	attribute<string>         gemeente_name                        (NVM_AMS) := NVM_AMS/gem_naam;
	attribute<uint32>         buurt_rel                            (NVM_AMS) := NVM_AMS/buurt_rel;
	attribute<uint32>         wijk_rel                             (NVM_AMS) := NVM_AMS/wijk_rel;
	// attribute<uint32>         pc6_rel                              (NVM_AMS) := NVM_AMS/pc6_rel;
	
	attribute<uint2>          HasEverHadAWoning                    (NVM_AMS) := /Analyse/HasWoning/HasWoning[NL_grid_domain_rel][uint2];
	attribute<int32>          diff_Spits_abs_15min                 (NVM_AMS) := /Brondata/Bereikbaarheid/AccessibilityChange_15min_smoothed[NL_grid_domain_rel];
	attribute<int32>          diff_Spits_abs_30min                 (NVM_AMS) := /Brondata/Bereikbaarheid/AccessibilityChange_30min_smoothed[NL_grid_domain_rel];
	attribute<int32>          diff_Spits_abs_45min                 (NVM_AMS) := /Brondata/Bereikbaarheid/AccessibilityChange_45min_smoothed[NL_grid_domain_rel];

	attribute<NL_grid/domain>       NL_grid_domain_rel                  (NVM_AMS) := geometry[Geography/NL_grid/domain], DisableStorage = "true";
	attribute<NL_grid/domain_500m>  NL_grid_domain_500m_rel             (NVM_AMS) := geometry[Geography/NL_grid/domain_500m], DisableStorage = "true";
	
	attribute<uint2>          noord_ta                  (NVM_AMS) := Analyse/TreatmentControlAreas/Result/noord_ta[NL_grid_domain_rel][uint2];
	attribute<uint2>          noord_ca                  (NVM_AMS) := Analyse/TreatmentControlAreas/Result/noord_ca[NL_grid_domain_rel][uint2];

	attribute<uint2>          noorderpark_ta            (NVM_AMS) := Analyse/TreatmentControlAreas/Result/noorderpark_ta[NL_grid_domain_rel][uint2];
	attribute<uint2>          noorderpark_ca            (NVM_AMS) := Analyse/TreatmentControlAreas/Result/noorderpark_ca[NL_grid_domain_rel][uint2];

	attribute<uint2>          centraal_ta               (NVM_AMS) := Analyse/TreatmentControlAreas/Result/centraal_ta[NL_grid_domain_rel][uint2];
	attribute<uint2>          centraal_ca               (NVM_AMS) := Analyse/TreatmentControlAreas/Result/centraal_ca[NL_grid_domain_rel][uint2];

	attribute<uint2>          rokin_ta                  (NVM_AMS) := Analyse/TreatmentControlAreas/Result/rokin_ta[NL_grid_domain_rel][uint2];
	attribute<uint2>          rokin_ca                  (NVM_AMS) := Analyse/TreatmentControlAreas/Result/rokin_ca[NL_grid_domain_rel][uint2];

	attribute<uint2>          vijzelgracht_ta           (NVM_AMS) := Analyse/TreatmentControlAreas/Result/vijzelgracht_ta[NL_grid_domain_rel][uint2];
	attribute<uint2>          vijzelgracht_ca           (NVM_AMS) := Analyse/TreatmentControlAreas/Result/vijzelgracht_ca[NL_grid_domain_rel][uint2];

	attribute<uint2>          depijp_ta                 (NVM_AMS) := Analyse/TreatmentControlAreas/Result/depijp_ta[NL_grid_domain_rel][uint2];
	attribute<uint2>          depijp_ca                 (NVM_AMS) := Analyse/TreatmentControlAreas/Result/depijp_ca[NL_grid_domain_rel][uint2];

	attribute<uint2>          europaplein_ta            (NVM_AMS) := Analyse/TreatmentControlAreas/Result/europaplein_ta[NL_grid_domain_rel][uint2];
	attribute<uint2>          europaplein_ca            (NVM_AMS) := Analyse/TreatmentControlAreas/Result/europaplein_ca[NL_grid_domain_rel][uint2];

	attribute<uint2>          zuid_ta                   (NVM_AMS) := Analyse/TreatmentControlAreas/Result/zuid_ta[NL_grid_domain_rel][uint2];
	attribute<uint2>          zuid_ca                   (NVM_AMS) := Analyse/TreatmentControlAreas/Result/zuid_ca[NL_grid_domain_rel][uint2];
	
	attribute<bool>           IsStudyArea               (NVM_AMS) := =AsList(TreatmentControlAreas/StationsXareas/name+' == 1[uint2]', ' || ');

}
