container Classifications: Using = "Units"
{
	#include<modes.dms>
	#include<lisa.dms>
	#include<osm.dms>
	
	Template Classify_9K
	{
		//
		attribute<uint32> target (domain_grid);
		unit<spoint> domain_grid;
		//
		
		attribute<uint32> classifyJf (Target_9K)  := ClassifyJenksFisher(target, Target_9K);
		
		unit<uint8> Target_9K : nrofrows = 9
		{
			attribute<uint32> PenColor  := Brushcolor, DialogType = "PenColor";
			attribute<uint32> BrushColor:
			[
				rgb(255,255,190),rgb(255,240,160),rgb(254,225,140),
				rgb(254,196,79) ,rgb(254,153,41) ,rgb(236,112,20),
				rgb(204,76,2)   ,rgb(153,52,4)   ,rgb(102,37,6)
			], DialogType = "BrushColor";
			
			attribute<uint32> ClassBreaks := classifyJf , DialogType = "Classification";
		}
	}
	
	
	unit<uint32> VertrekMomenten_3K : nrofrows = 3
	{
		attribute<string> Name           : ['Weinig','Gemiddeld','Veel'];
		attribute<uint32> Tram_onder     := Analysis/Halte_analyse_Bart/Stop_per_mode/Tram/Per_mode_subset/classify_ClusterTrips;
		attribute<uint32> Metro_onder    := Analysis/Halte_analyse_Bart/Stop_per_mode/Metro/Per_mode_subset/classify_ClusterTrips;
		attribute<uint32> Rail_onder     := Analysis/Halte_analyse_Bart/Stop_per_mode/Rail/Per_mode_subset/classify_ClusterTrips;
		attribute<uint32> Bus_onder      := Analysis/Halte_analyse_Bart/Stop_per_mode/Bus/Per_mode_subset/classify_ClusterTrips;
		attribute<uint32> Ferry_onder    := Analysis/Halte_analyse_Bart/Stop_per_mode/Ferry/Per_mode_subset/classify_ClusterTrips;
		
		attribute<uint32> Tram_boven     := MakeDefined(Tram_onder[id(.) + 1],20000);
		attribute<uint32> Metro_boven    := MakeDefined(Metro_onder[id(.) + 1],20000);
		attribute<uint32> Rail_boven     := MakeDefined(Rail_onder[id(.) + 1],20000);
		attribute<uint32> Bus_boven      := MakeDefined(Bus_onder[id(.) + 1],20000);
		attribute<uint32> Ferry_boven    := MakeDefined(Ferry_onder[id(.) + 1],20000);
		
		container V := for_each_nedv(Name, string(id(.)), void, .);
	}
	
	unit<uint32> Mode_X_Vertrekmomenten3K := combine(ModesList/List_selectie,VertrekMomenten_3K)
	{
		attribute<string> Mode_name            := ModesList/List_selectie/name[nr_1];
		attribute<string> VertrekmomentK_name  := VertrekMomenten_3K/name[nr_2];
		attribute<string> name                 := Mode_name + '_' + VertrekmomentK_name;
		
		attribute<uint32> Class_onder          := Mode_name == 'Tram' 
													? VertrekMomenten_3K/Tram_onder[nr_2]
													: Mode_name == 'Metro'
														? VertrekMomenten_3K/Metro_onder[nr_2]
														: Mode_name == 'Rail'
															? VertrekMomenten_3K/Rail_onder[nr_2]
															: Mode_name == 'Bus'
																? VertrekMomenten_3K/Bus_onder[nr_2]
																: VertrekMomenten_3K/Ferry_onder[nr_2];
		attribute<uint32> Class_boven          := Mode_name == 'Tram' 
													? VertrekMomenten_3K/Tram_boven[nr_2]
													: Mode_name == 'Metro'
														? VertrekMomenten_3K/Metro_boven[nr_2]
														: Mode_name == 'Rail'
															? VertrekMomenten_3K/Rail_boven[nr_2]
															: Mode_name == 'Bus'
																? VertrekMomenten_3K/Bus_boven[nr_2]
																: VertrekMomenten_3K/Ferry_boven[nr_2];
	}
	
	
	unit<uint32> LinkTypes: NrOfRows = 7
	{
		attribute<string> Name     : ['Undefined','Scheduled','Transfer','Stop_to_Dest','Org_to_Stop','Waiting_at_Stop','Waiting_at_Org'];
		attribute<string> LabelText:= Name, DialogType = "LabelText";
		attribute<uint32> PenColor : [rgb(128,128,128), rgb(200,0,0), rgb(129,129,0), rgb(0,0,128),rgb(0,0,255), rgb(128,128,128), rgb(128,128,128)], DialogType = "PenColor";
		attribute<int16>  PenStyle : [4,0,1,2,2,0], DialogType = "PenStyle";
		container values := for_each_nedv(Name, string(id(.)), void, .);
	}

	unit<int32> Jobs : nrofrows = 9
	{
		attribute<int32>  Classes      : [              0,         25000,         50000,           100000,        150000,       200000,       300000,       400000,      500000], DialogType = "Classification";
		attribute<uint32> BrushColor    : [    rgb(255,255,0),rgb(255,225,0),rgb(255,190,0),rgb(255,160,0),rgb(255,125,0),rgb(255,95,0),rgb(255,60,0),rgb(255,30,0),rgb(255,0,0)], DialogType = "BrushColor";
		attribute<string> Label         : [      '0 - 25k',   '25k - 50k',  '50k - 100k',    '100k - 150k', '150k - 200k','200k - 300k','300k - 400k','400k - 500k',    '> 500k'], DialogType = "LabelText";
		attribute<uint32> PenColor      := BrushColor, DialogType = "PenColor";
		parameter<int16>  PenWidth      := 0s,  DialogType = "PenWidth";
		attribute<uint32> SymbolColor   := BrushColor, DialogType = "SymbolColor";
	}
	unit<int32> Job_diff : nrofrows = 9
	{
		attribute<int32>  Classes       : [        -300000,       -100000,        -50000,        -25000,             0,          25000,          50000,          100000,        300000], DialogType = "Classification";
		attribute<uint32> BrushColor    : [   rgb(255,0,0),rgb(255,128,0),rgb(255,197,0),rgb(255,231,0),rgb(255,255,0),rgb(185,220,69),rgb(115,185,139),rgb(69,162,185),rgb(0,128,255)], DialogType = "BrushColor";
		attribute<string> Label         : ['-300k - -100k','-100 - -50k','-50k - -25k',     '-25k - 0',     '0 - 25k',   '25k - 50k',   '50k - 100k',  '100k - 300k',      '> 300k'], DialogType = "LabelText";
		attribute<uint32> PenColor      := BrushColor, DialogType = "PenColor";
		parameter<int16>  PenWidth      := 0s,  DialogType = "PenWidth";
		attribute<uint32> SymbolColor   := BrushColor, DialogType = "SymbolColor";
	}
	// unit<int32> Job_diff_percentage : nrofrows = 11
	// { 
		// attribute<float32>  Classes     : [             -1,          -0.3,         -0.05,           -0.01,          0.01,          0.05,            0.2,            0.35,            0.5,             1,               5], DialogType = "Classification";
		// attribute<uint32> BrushColor    : [   rgb(255,0,0),rgb(255,128,0),rgb(255,197,0),rgb(230,230,230),rgb(255,231,0),rgb(255,255,0),rgb(185,220,69),rgb(115,185,139),rgb(69,162,185),rgb(0,128,255),rgb(255,255,255)], DialogType = "BrushColor";
		// attribute<string> Label         : [ '-100% - -30%',  '-30% - -5%',   '-5% - -1%',      '-1% - 1%',     '1% - 5%',    '5% - 20%',    '20% - 35%',     '35% - 50%',   '50% - 100%',      '> 100%',        'NoData'], DialogType = "LabelText";
		// attribute<uint32> PenColor      := BrushColor, DialogType = "PenColor";
		// attribute<uint32> SymbolColor   := BrushColor, DialogType = "SymbolColor";
		// parameter<int16>  PenWidth      := 0s,  DialogType = "PenWidth";
	// }
	
	unit<int32> Job_diff_percentage : nrofrows = 13
	{ 
		attribute<float32>  Classes     : [             -1,          -0.3,         -0.20,         -0.10,         -0.05,           -0.01,          0.01,          0.05,            0.2,            0.35,            0.5,             1,               5], DialogType = "Classification";
		attribute<uint32> BrushColor    : [   rgb(255,0,0),rgb(255,100,0),rgb(255,160,0),rgb(255,210,0),rgb(255,255,0),rgb(230,230,230),rgb(205,255,180),rgb(160,200,180),rgb(120,150,190),rgb(80,100,190),rgb(40,50,200),rgb(0,0,150),rgb(255,255,255)], DialogType = "BrushColor";
		attribute<string> Label         : [ '-100% - -30%', '-30% - -20%', '-20% - -10%',  '-10% - -5%',   '-5% - -1%',      '-1% - 1%',     '1% - 5%',    '5% - 20%',    '20% - 35%',     '35% - 50%',   '50% - 100%',      '> 100%',        'NoData'], DialogType = "LabelText";
		// attribute<uint32> PenColor      := const(rgb(150,150,150),.), DialogType = "PenColor";
		attribute<uint32> PenColor      := BrushColor, DialogType = "PenColor";
		attribute<uint32> SymbolColor   := BrushColor, DialogType = "SymbolColor";
		parameter<int16>  PenWidth      := 0s,  DialogType = "PenWidth";
	}
	
	unit<uint8> m_4K: nrofrows = 4
	{
		attribute<m> Classes: DialogType = "Classification",
			[0,200,400,800];
		attribute<uint32> SymbolColor: DialogType = "SymbolColor",
			[rgb(0,255,0),rgb(0,128,128),rgb(0,0,225),rgb(255,0,0)];
		attribute<string> Label: DialogType = "LabelText",
			['0   - 200','200 - 400','400 - 800','    > 800'];
		parameter<size> SymbolSize: DialogType = "SymbolSize",[6];
	}
	unit<uint8> m_10K: nrofrows = 10
	{
		attribute<m> Classes: DialogType = "Classification",
			[0,100,500,1000,1500,2000,2500,5000,7500, 10000];
		attribute<uint32> SymbolColor: DialogType = "SymbolColor",
			[rgb(192,192,192),rgb(51,205,0),rgb(102,217,0),rgb(153,230,0),rgb(204,242,0),
			 rgb(255,255,0),rgb(255,191,0),rgb(255,128,0),rgb(255,64,0),rgb(255,0,0)];
		attribute<string> Label: DialogType = "LabelText",
			['0 - 100 m','100 m -  500m','500 -  1000m','1000 -  1500m','1500 -  2000m','2000 -  2500m','2500 -  5000m','5000 -  7500km', '7500m -  10km','>= 10km'];
	}
	unit<uint8> s_10K: nrofrows = 10
	{
		attribute<s> Classes: DialogType = "Classification",
			[0,1,450,900,1350,1800,2700,3600,4500,5400];
		attribute<uint32> SymbolColor: DialogType = "SymbolColor",
			[rgb(192,192,192),rgb(51,205,0),rgb(102,217,0),rgb(153,230,0),rgb(204,242,0),
			 rgb(255,255,0),rgb(255,191,0),rgb(255,128,0),rgb(255,64,0),rgb(255,0,0)];
		attribute<string> Label: DialogType = "LabelText",
			['0 - 1 s','1 s -  2 hr','2 hr -  3 hr','3 hr -  4 hr','4 hr -  5 hr','5 hr -  6 hr','6 hr -  7 hr', '7 hr -  8 hr','8 hr -  9 hr','>= 9 hr'];
	}
	
	unit<uint8> BBG: NrOfRows = 39
	{
		parameter<uint32> nrAttr := 10;
		unit<uint32> Elements  := Range(uint32, 0, nrAttr*#.)
		{
			attribute<String> Text:
			[
				// BBG_EK, Label                         , r  , g   , b   , 10k rel, onbebouwbaar, pot, 'gg_10k_anders_rel', 'BBG'
				' 0','NoData',                           '255','255','255', '0', '1','0','0' , '0',
				'10','spoorwegen',                       '115',' 76','  0', '4', '1','1','4' , '3',
				'11','hoofdweg',                         '100','100','100', '4', '1','1','4' , '3',
				'12','vliegveld',                        '109','109','109', '4', '1','1','4' , '4',
				'20','woongebied',                       '254',' 60','  0', '1', '0','1','1' , '1',
				'21','detailhandel en horeca',           '254','190','  0', '2', '0','1','6' , '1',
				'22','openbare voorzieningen',           '254','238','  0', '2', '0','1','7' , '2',
				'23','sociaal-culturele voorzieningen',  '254','132',' 25', '2', '0','1','7' , '2',
				'24','bedrijfsterreinen',                '169','169','169', '2', '0','1','2' , '1',
				'30','stortplaatsen',                    '179','122','157', '2', '0','1','2' , '2',
				'31','wrakkenopslagplaatsen',            '179','122','157', '2', '0','1','2' , '2',
				'32','begraafplaats',                    '103','174','  0', '2', '0','1','5' , '2',
				'33','delfstoffenwinning',               '173','164','254', '2', '0','1','2' , '4',
				'34','bouwterrein',                      '254','211','127', '3', '0','1','3' , '4',
				'35','semi verhard overig terrein',      '254','250','194', '2', '0','1','2' , '4',
				'40','parken en plantsoenen',            '177','214','  0', '5', '0','1','5' , '2',
				'41','sportterreinen',                   '128','128','  0', '5', '0','1','5' , '2',
				'42','volkstuinen',                      '174','151',' 75', '5', '0','1','5' , '2',
				'43','dagrecreatieve terreinen',         '226','254',' 95', '2', '0','1','5' , '2',
				'44','verblijfsrecreatie',               '151','254','  0', '2', '0','1','5' , '4',
				'50','glastuinbouw',                     '214','133','137', '6', '0','1','5' , '4',
				'51','overige agrarisch gebruik',        '233','245','190', '6', '0','1','5' , '4',
				'60','bos',                              '103','174','  0', '7', '0','1','5' , '4',
				'61','droog natuurlijk terrein',         '254','223','223', '7', '0','1','5' , '4',
				'62','nat natuurlijk terrein',           '105','213','180', '7', '0','1','5' , '4',
				'70','IJsselmeer/Markermeer',            '151','219','242', '8', '1','0','8' , '4',
				'71','afgesloten zeearm',                ' 20','164','171', '8', '1','0','8' , '3',
				'72','Rijn en Maas',                     '151','219','242', '8', '1','0','8' , '3',
				'73','Randmeer',                         ' 20','164','171', '8', '1','0','8' , '3',
				'74','spaarbekkens',                     '151','219','242', '8', '1','0','8' , '4',
				'75','water met een recreatieve functie','151','219','242', '8', '1','1','8' , '4',
				'76','water met delfstofwinningsfunctie','151','219','242', '8', '1','1','8' , '4',
				'77','vloei- en/of slibveld',            '151','219','242', '2', '1','1','8' , '2',
				'78','overig binnenwater',               '151','219','242', '8', '1','1','8' , '3',
				'80','Waddenzee-Eems-Dollard',           '151','219','242', '9', '1','0','8' , '4',
				'81','Oosterschelde',                    '151','219','242', '8', '1','0','8' , '4',
				'82','Westerschelde',                    '151','219','242', '8', '1','0','8' , '4',
				'83','Noordzee',                         '151','219','242', '9', '1','0','8' , '4',
				'90','Buitenland',                       '255','255','255', '0', '1','0','9' , '4'
			]; 
		}
		attribute<uint8>        id              := id(.);
		attribute<uint8>        bbg_ek          := Elements/Text[value(UInt32(ID(.))* nrAttr + 0, Elements)][uint8];
		attribute<string>       label           := Elements/Text[value(UInt32(ID(.))* nrAttr + 1, Elements)], DialogType = "LabelText";
		attribute<uint8>        r               := Elements/Text[value(UInt32(ID(.))* nrAttr + 2, Elements)][uint8];
		attribute<uint8>        g               := Elements/Text[value(UInt32(ID(.))* nrAttr + 3, Elements)][uint8];
		attribute<uint8>        b               := Elements/Text[value(UInt32(ID(.))* nrAttr + 4, Elements)][uint8];
		
		attribute<string>       name            := replace(label, ' ', '_', '/', '_', '-', '_');
		attribute<uint32>       BrushColor      := rgb(r, g, b), DialogType = "BrushColor";
		attribute<uint32>       PenColor        := BrushColor, DialogType = "PenColor";
		parameter<int16>        PenWidth        := 0[int16], DialogType = "penWidth";
		attribute<uint32>       SymbolColor     := BrushColor, DialogType = "SymbolColor";
		container V := for_each_nedv(name, String(ID(.))+'[..]', void, .);
	}
}